version: '3.8'

services:
  redis-master:
    image: library/redis:6.0.6-alpine
    container_name: redis-master
    ports:
      - 6379:6379
    volumes:
      - ./data/redis:/data

  jaeger-allinone:
    image: jaegertracing/all-in-one:1.18.1
    container_name: jaeger-allinone
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 14250:14250
      - 9411:9411

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - 9200:9200

  fluentd:
    build: ./fluentd
    container_name: fluentd
    restart: unless-stopped
    volumes:
      - ./fluentd/conf:/fluentd/etc
    links:
      - elasticsearch
    ports:
      - 24224:24224
      - 24224:24224/udp
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:7.9.0
    container_name: kibana
    links:
      - elasticsearch
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch

  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    ports:
      - 8085:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./data/prometheus/data:/prometheus

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    links:
      - prometheus:prometheus
    ports:
      - 3000:3000
    volumes:
      - ./data/grafana:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
  #  environment:
  #    - GF_SECURITY_ADMIN_PASSWORD=MYPASSWORT
  #    - GF_USERS_ALLOW_SIGN_UP=false
  #    - GF_SERVER_DOMAIN=myrul.com
  #    - GF_SMTP_ENABLED=true
  #    - GF_SMTP_HOST=smtp.gmail.com:587
  #    - GF_SMTP_USER=myadrress@gmail.com
  #    - GF_SMTP_PASSWORD=mypassword
  #    - GF_SMTP_FROM_ADDRESS=myaddress@gmail.com

  redis-service:
    container_name: redis-service
    build:
      context: ../redis-service
    image: dmitrinav/redis-service
#    restart: unless-stopped
    links:
      - fluentd
      - jaeger-allinone
      - redis-master
    depends_on:
      - redis-master
      - fluentd
      - jaeger-allinone
    ports:
      - 8082:8082

  client-service:
    container_name: client-service
    build:
      context: ../client-service
    image: dmitrinav/client-service
#    restart: unless-stopped
    links:
      - fluentd
      - jaeger-allinone
      - redis-service
    depends_on:
      - redis-service
      - fluentd
      - jaeger-allinone
    ports:
      - 8081:8081